buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.antfortune.freeline'

apply from: rootProject.projectDir.absolutePath + '/config.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion

    dexcount {
        format = "list"
        includeClasses = true
        includeFieldCount = true
        includeTotalMethodCount = true
        orderByMethodCount = true
        verbose = true
    }

    defaultConfig {
        applicationId "com.noo.app"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main {
            jniLibs.srcDirs("jniLibs")
            java.srcDirs = ['src/main/java']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    flavorDimensions 'default'
    flavorDimensions 'default'

    productFlavors {
        mock {
            dimension 'default'
            applicationIdSuffix '.mock'
        }
        prod {
            dimension 'default'
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }
    buildToolsVersion '27.0.3'
}


repositories {
    maven {
        url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation project(':core')
    implementation 'com.pnikosis:materialish-progress:1.0'
    implementation 'com.facebook.stetho:stetho:1.4.2'
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation 'jp.wasabeef:blurry:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.cleveroad:fireworkypulltorefresh:1.0.3'
    implementation 'com.baoyz.pullrefreshlayout:library:1.2.0'
    implementation 'com.cjj.materialrefeshlayout:library:1.3.0'
    // google easy permission
    implementation 'pub.devrel:easypermissions:1.1.2'
    implementation project(':mvp')
}

